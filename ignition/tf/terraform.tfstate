{
    "version": 3,
    "terraform_version": "0.9.5",
    "serial": 0,
    "lineage": "ef8347e6-1ca3-4ed4-8f5c-94383bebf4ef",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {
                "atx-workers": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/nvme0n1\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/nvme0n1p1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXR4LXdvcmtlcjAtYm9yZy5wcm9kLnV3LnN5c3RlbXM=\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }"
                    ]
                },
                "dell-workers": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMC1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                        "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMS1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                        "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMi1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                        "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMy1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }"
                    ]
                },
                "master": {
                    "sensitive": false,
                    "type": "string",
                    "value": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-apiserver.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtYXBpc2VydmVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtYXBpc2VydmVyCiAgICBpbWFnZTogcXVheS5pby9jb3Jlb3MvaHlwZXJrdWJlOnYxLjYuMl9jb3Jlb3MuMAogICAgY29tbWFuZDoKICAgIC0gL2h5cGVya3ViZQogICAgLSBhcGlzZXJ2ZXIKICAgIC0gLS1iaW5kLWFkZHJlc3M9MC4wLjAuMAogICAgLSAtLWV0Y2Qtc2VydmVycz1odHRwczovLzE5Mi4xNjguMS4xMDA6MjM3OQogICAgLSAtLWV0Y2QtY2FmaWxlPS9ldGMva3ViZXJuZXRlcy9zc2wvY2EucGVtCiAgICAtIC0tZXRjZC1jZXJ0ZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICAtIC0tZXRjZC1rZXlmaWxlPS9ldGMva3ViZXJuZXRlcy9zc2wvazhzLWFwaXNlcnZlci1rZXkucGVtCiAgICAtIC0tYWxsb3ctcHJpdmlsZWdlZD10cnVlCiAgICAtIC0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPTEwLjMuMC4wLzI0CiAgICAtIC0tc2VjdXJlLXBvcnQ9NDQzCiAgICAtIC0tYWR2ZXJ0aXNlLWFkZHJlc3M9MTkyLjE2OC4xLjEwMAogICAgLSAtLWFkbWlzc2lvbi1jb250cm9sPU5hbWVzcGFjZUxpZmVjeWNsZSxMaW1pdFJhbmdlcixTZXJ2aWNlQWNjb3VudCxSZXNvdXJjZVF1b3RhCiAgICAtIC0tdGxzLWNlcnQtZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICAtIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9rOHMtYXBpc2VydmVyLWtleS5wZW0KICAgIC0gLS1jbGllbnQtY2EtZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2NhLnBlbQogICAgLSAtLXNlcnZpY2UtYWNjb3VudC1rZXktZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIta2V5LnBlbQogICAgLSAtLXNlcnZpY2UtYWNjb3VudC1sb29rdXA9dHJ1ZQogICAgLSAtLXJ1bnRpbWUtY29uZmlnPWV4dGVuc2lvbnMvdjFiZXRhMT10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS9kZXBsb3ltZW50cz10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS9kYWVtb25zZXRzPXRydWUsZXh0ZW5zaW9ucy92MWJldGExL25ldHdvcmtwb2xpY2llcz10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS90aGlyZHBhcnR5cmVzb3VyY2VzPXRydWUscmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExPXRydWUsYmF0Y2gvdjJhbHBoYTE9dHJ1ZQogICAgLSAtLW9pZGMtaXNzdWVyLXVybD1odHRwczovL2FjY291bnRzLmdvb2dsZS5jb20KICAgIC0gLS1vaWRjLXVzZXJuYW1lLWNsYWltPWVtYWlsCiAgICAtIC0tb2lkYy1jbGllbnQtaWQ9NTI0MjQzNjAwODM2LWhqdXIzYnJvamhsdHQ4Y2dkdHFpczA3dWk4cGY1OTd0LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tCiAgICAtIC0tYXV0aG9yaXphdGlvbi1tb2RlPVJCQUMKICAgIC0gLS1hcGlzZXJ2ZXItY291bnQ9MQogICAgLSAtLWF1ZGl0LWxvZy1wYXRoPS9kZXYvc3Rkb3V0CiAgICAtIC0tc3RvcmFnZS1iYWNrZW5kPWV0Y2QzCiAgICAtIC0tc3RvcmFnZS1tZWRpYS10eXBlPWFwcGxpY2F0aW9uL2pzb24KICAgIC0gLS12PTAKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcG9ydDogODA4MAogICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxNQogICAgcG9ydHM6CiAgICAtIGNvbnRhaW5lclBvcnQ6IDQ0MwogICAgICBob3N0UG9ydDogNDQzCiAgICAgIG5hbWU6IGh0dHBzCiAgICAtIGNvbnRhaW5lclBvcnQ6IDgwODAKICAgICAgaG9zdFBvcnQ6IDgwODAKICAgICAgbmFtZTogbG9jYWwKICAgIHZvbHVtZU1vdW50czoKICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1rdWJlcm5ldGVzCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMva3ViZXJuZXRlcy9zc2wKICAgIG5hbWU6IHNzbC1jZXJ0cy1rdWJlcm5ldGVzCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL3Vzci9zaGFyZS9jYS1jZXJ0aWZpY2F0ZXMKICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0Cg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tcHJveHktbW9kZT1pcHRhYmxlcwogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC91c3Ivc2hhcmUvY2EtY2VydGlmaWNhdGVzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-controller-manager.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY29udHJvbGxlci1tYW5hZ2VyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGNvbnRhaW5lcnM6CiAgLSBuYW1lOiBrdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbWFzdGVyPWh0dHA6Ly8xMjcuMC4wLjE6ODA4MAogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiAgICAtIC0tc2VydmljZS1hY2NvdW50LXByaXZhdGUta2V5LWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9rOHMtYXBpc2VydmVyLWtleS5wZW0KICAgIC0gLS1yb290LWNhLWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIC0gLS1jb25maWd1cmUtY2xvdWQtcm91dGVzPWZhbHNlCiAgICAtIC0tYWxsb2NhdGUtbm9kZS1jaWRycz10cnVlCiAgICAtIC0tY2x1c3Rlci1jaWRyPTEwLjIuMC4wLzE2CiAgICAtIC0tdj0wCiAgICByZXNvdXJjZXM6CiAgICAgIHJlcXVlc3RzOgogICAgICAgIGNwdTogMjAwbQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxNQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMva3ViZXJuZXRlcy9zc2wKICAgICAgbmFtZTogc3NsLWNlcnRzLWt1YmVybmV0ZXMKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogICAgICByZWFkT25seTogdHJ1ZQogIGhvc3ROZXR3b3JrOiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICBuYW1lOiBzc2wtY2VydHMta3ViZXJuZXRlcwogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC91c3Ivc2hhcmUvY2EtY2VydGlmaWNhdGVzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-scheduler.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogcXVheS5pby9jb3Jlb3MvaHlwZXJrdWJlOnYxLjYuMl9jb3Jlb3MuMAogICAgY29tbWFuZDoKICAgIC0gL2h5cGVya3ViZQogICAgLSBzY2hlZHVsZXIKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICBsaXZlbmVzc1Byb2JlOgogICAgICBodHRwR2V0OgogICAgICAgIGhvc3Q6IDEyNy4wLjAuMQogICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgICAgcG9ydDogMTAyNTEKICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogMTUKICAgICAgdGltZW91dFNlY29uZHM6IDE1Cg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-system.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJhcGlWZXJzaW9uIjogInYxIiwKICAia2luZCI6ICJOYW1lc3BhY2UiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtc3lzdGVtIgogIH0KfQo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/network-policy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlRoaXJkUGFydHlSZXNvdXJjZSIsCiAgImFwaVZlcnNpb24iOiAiZXh0ZW5zaW9ucy92MWJldGExIiwKICAibWV0YWRhdGEiOiB7CiAgICAibmFtZSI6ICJuZXR3b3JrLXBvbGljeS5uZXQuYWxwaGEua3ViZXJuZXRlcy5pbyIKICB9LAogICJkZXNjcmlwdGlvbiI6ICJTcGVjaWZpY2F0aW9uIGZvciBhIG5ldHdvcmsgaXNvbGF0aW9uIHBvbGljeSIsCiAgInZlcnNpb25zIjogWwogICAgewogICAgICAibmFtZSI6ICJ2MWFscGhhMSIKICAgIH0KICBdCn0K\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cDovLzEyNy4wLjAuMTo4MDgwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/opt/bin/install-kube-system\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2ggLWUKL3Vzci9iaW4vY3VybCAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAtWFBPU1QgLWQgQCIvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtc3lzdGVtLmpzb24iICJodHRwOi8vMTI3LjAuMC4xOjgwODAvYXBpL3YxL25hbWVzcGFjZXMiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9Im1hc3RlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFzdGVyMC1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"etcd-member.service\",\n          \"enable\": true,\n          \"dropins\": [\n            {\n              \"name\": \"10-wait-etcd.conf\",\n              \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n\"\n            },\n            {\n              \"name\": \"15-custom-options.conf\",\n              \"contents\": \"[Service]\\nExecStartPre=/usr/bin/mkdir -p /etc/etcd\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/lib/coreos/etcd-member-wrapper.uuid \\\\\\n  --volume etc-etcd,kind=host,source=/etc/etcd,readOnly=true \\\\\\n  --mount volume=etc-etcd,target=/etc/etcd\\\"\\n\"\n            },\n            {\n              \"name\": \"20-config.conf\",\n              \"contents\": \"[Service]\\nEnvironment=\\\"ETCD_IMAGE_URL=quay.io/coreos/etcd\\\"\\nEnvironment=\\\"ETCD_IMAGE_TAG=v3.1.6\\\"\\nEnvironment=\\\"ETCD_NAME=member0\\\"\\nEnvironment=\\\"ETCD_INITIAL_CLUSTER=member0=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_LISTEN_PEER_URLS=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\\\"\\nEnvironment=\\\"ETCD_ADVERTISE_CLIENT_URLS=https://192.168.1.100:2379\\\"\\nEnvironment=\\\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_CLIENT_CERT_AUTH=true\\\"\\nEnvironment=\\\"ETCD_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\\\"\\nEnvironment=\\\"ETCD_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\\\"\\nEnvironment=\\\"ETCD_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\\\"\\nEnvironment=\\\"ETCD_PEER_CLIENT_CERT_AUTH=true\\\"\\nEnvironment=\\\"ETCD_PEER_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\\\"\\nEnvironment=\\\"ETCD_PEER_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\\\"\\nEnvironment=\\\"ETCD_PEER_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\\\"\\n\"\n            }\n          ]\n        },\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nRequires=docker.service\\nAfter=docker.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=master \\\\\\n  --register-node=true \\\\\\n  --register-schedulable=false \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster-dns=10.3.0.10 \\\\\\n  --cluster-domain=cluster.local\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"install-kube-system.service\",\n          \"enable\": true,\n          \"contents\": \"#!/bin/bash -e\\n/usr/bin/curl -H \\\"Content-Type: application/json\\\" -XPOST -d @\\\"/srv/kubernetes/manifests/kube-system.json\\\" \\\"http://127.0.0.1:8080/api/v1/namespaces\\\"\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }"
                }
            },
            "resources": {
                "data.ignition_config.atx-worker": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.nvme0n1",
                        "data.ignition_file.atx-hostname.*",
                        "data.ignition_file.kube-proxy-worker",
                        "data.ignition_file.worker-kubeconfig",
                        "data.ignition_file.worker-machine-role",
                        "data.ignition_filesystem.nvme0n1root",
                        "data.ignition_systemd_unit.get-ssl-worker",
                        "data.ignition_systemd_unit.kubelet-worker"
                    ],
                    "primary": {
                        "id": "e6e1266f9e669b854ccad640221da0ddaa3c9b8843c3de8a9b6f901d323ccb8a",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "09528e085503b0702bcedafb00b0f522eb753d1041ee28b881026246edaab743",
                            "files.#": "4",
                            "files.0": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "files.1": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "files.2": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "files.3": "bb64754bf438c4cd0484dbae0b4abe05eead3307413c39765c7e5875a5e519c3",
                            "filesystems.#": "1",
                            "filesystems.0": "a960d14cb5eaca4a9d834983072ed768c1c1f784b246f30ef86c629069690057",
                            "id": "e6e1266f9e669b854ccad640221da0ddaa3c9b8843c3de8a9b6f901d323ccb8a",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/nvme0n1\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/nvme0n1p1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXR4LXdvcmtlcjAtYm9yZy5wcm9kLnV3LnN5c3RlbXM=\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "2",
                            "systemd.0": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "systemd.1": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_config.dell-worker.0": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.devsda",
                        "data.ignition_file.dell-hostname.*",
                        "data.ignition_file.kube-proxy-worker",
                        "data.ignition_file.worker-kubeconfig",
                        "data.ignition_file.worker-machine-role",
                        "data.ignition_filesystem.root",
                        "data.ignition_systemd_unit.get-ssl-worker",
                        "data.ignition_systemd_unit.kubelet-worker"
                    ],
                    "primary": {
                        "id": "d23b931aa12d907e9ceb88b455c9030f9f791560d163e56f767471917db7c88f",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "files.#": "4",
                            "files.0": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "files.1": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "files.2": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "files.3": "8c38cf9882e3d6b94cc002273171eb1ef8a111d3e84a3262c94fdc67414b41bb",
                            "filesystems.#": "1",
                            "filesystems.0": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "id": "d23b931aa12d907e9ceb88b455c9030f9f791560d163e56f767471917db7c88f",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMC1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "2",
                            "systemd.0": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "systemd.1": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_config.dell-worker.1": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.devsda",
                        "data.ignition_file.dell-hostname.*",
                        "data.ignition_file.kube-proxy-worker",
                        "data.ignition_file.worker-kubeconfig",
                        "data.ignition_file.worker-machine-role",
                        "data.ignition_filesystem.root",
                        "data.ignition_systemd_unit.get-ssl-worker",
                        "data.ignition_systemd_unit.kubelet-worker"
                    ],
                    "primary": {
                        "id": "a59ad1fadc3a91a1e6ca3137a902807297225c78523a781cea46ad752024b2ef",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "files.#": "4",
                            "files.0": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "files.1": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "files.2": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "files.3": "c9ab93d2c692275ae15e0064c1ea08fac1278345b1c69300461e4d6eecd18327",
                            "filesystems.#": "1",
                            "filesystems.0": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "id": "a59ad1fadc3a91a1e6ca3137a902807297225c78523a781cea46ad752024b2ef",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMS1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "2",
                            "systemd.0": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "systemd.1": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_config.dell-worker.2": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.devsda",
                        "data.ignition_file.dell-hostname.*",
                        "data.ignition_file.kube-proxy-worker",
                        "data.ignition_file.worker-kubeconfig",
                        "data.ignition_file.worker-machine-role",
                        "data.ignition_filesystem.root",
                        "data.ignition_systemd_unit.get-ssl-worker",
                        "data.ignition_systemd_unit.kubelet-worker"
                    ],
                    "primary": {
                        "id": "9d20a9bdb6942f6fcc70e37fa52e5ce6345766c15a4baf71d4e02e49ba04ad28",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "files.#": "4",
                            "files.0": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "files.1": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "files.2": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "files.3": "67cbe1200abdc2646f39f07ef00bd27e0720b559f42aab41a4a2635cb1990f9b",
                            "filesystems.#": "1",
                            "filesystems.0": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "id": "9d20a9bdb6942f6fcc70e37fa52e5ce6345766c15a4baf71d4e02e49ba04ad28",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMi1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "2",
                            "systemd.0": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "systemd.1": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_config.dell-worker.3": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.devsda",
                        "data.ignition_file.dell-hostname.*",
                        "data.ignition_file.kube-proxy-worker",
                        "data.ignition_file.worker-kubeconfig",
                        "data.ignition_file.worker-machine-role",
                        "data.ignition_filesystem.root",
                        "data.ignition_systemd_unit.get-ssl-worker",
                        "data.ignition_systemd_unit.kubelet-worker"
                    ],
                    "primary": {
                        "id": "26232e980a64b3b982ab34b2419b8b1565f408af7909ac6e8fe0524b0693f736",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "files.#": "4",
                            "files.0": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "files.1": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "files.2": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "files.3": "6cea85daced8193dbcd42f5aad72eed1df47d9a042f6a7d62f3c28b22e537d7b",
                            "filesystems.#": "1",
                            "filesystems.0": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "id": "26232e980a64b3b982ab34b2419b8b1565f408af7909ac6e8fe0524b0693f736",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1rdWJlY29uZmlnPS9ldGMva3ViZXJuZXRlcy9rdWJlY29uZmlnCiAgICAtIC0tbWFzdGVyPWh0dHBzOi8vMTkyLjE2OC4xLjEwMAogICAgLSAtLXByb3h5LW1vZGU9aXB0YWJsZXMKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgICBsaW1pdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgbWVtb3J5OiAxMDBNaQogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICAgIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZwogICAgICAgIG5hbWU6ICJrdWJlY29uZmlnIgogICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgICAgbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgICByZWFkT25seTogdHJ1ZQogIHZvbHVtZXM6CiAgICAtIG5hbWU6ICJzc2wtY2VydHMiCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvdXNyL3NoYXJlL2NhLWNlcnRpZmljYXRlcyIKICAgIC0gbmFtZTogImt1YmVjb25maWciCiAgICAgIGhvc3RQYXRoOgogICAgICAgIHBhdGg6ICIvZXRjL2t1YmVybmV0ZXMva3ViZWNvbmZpZyIKICAgIC0gbmFtZTogImV0Yy1rdWJlLXNzbCIKICAgICAgaG9zdFBhdGg6CiAgICAgICAgcGF0aDogIi9ldGMva3ViZXJuZXRlcy9zc2wiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cHM6Ly8xOTIuMTY4LjEuMTAwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy13b3JrZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9IndvcmtlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,d29ya2VyMy1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=worker \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --register-node=true \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster_dns=10.3.0.10 \\\\\\n  --cluster_domain=cluster.local \\\\\\n  --eviction-soft=memory.available\\u003c1Gi,nodefs.available\\u003c2Gi \\\\\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\\\\n  --eviction-max-pod-grace-period=30 \\\\\\n  --eviction-hard=memory.available\\u003c512Mi,nodefs.available\\u003c1Gi\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "2",
                            "systemd.0": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "systemd.1": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_config.master": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_disk.devsda",
                        "data.ignition_file.install-kube-system",
                        "data.ignition_file.kube-apiserver",
                        "data.ignition_file.kube-controller-manager",
                        "data.ignition_file.kube-proxy",
                        "data.ignition_file.kube-scheduler",
                        "data.ignition_file.kube-system",
                        "data.ignition_file.master-hostname",
                        "data.ignition_file.master-kubeconfig",
                        "data.ignition_file.master-machine-role",
                        "data.ignition_file.network-policy",
                        "data.ignition_filesystem.root",
                        "data.ignition_systemd_unit.etcd-member",
                        "data.ignition_systemd_unit.get-ssl",
                        "data.ignition_systemd_unit.install-kube-system",
                        "data.ignition_systemd_unit.kubelet"
                    ],
                    "primary": {
                        "id": "ead9db67cff7504c0793aef365ed9191ec3ed7863d133b31bf1e350f89ba5406",
                        "attributes": {
                            "disks.#": "1",
                            "disks.0": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "files.#": "10",
                            "files.0": "fbc953bae7fb0708b1bddb9d738f02a64a0d29a1c8df8513ceaedd2077052785",
                            "files.1": "5489b9992855b592f7eaa0315d438e894573688ddcd3a2f2412f9be3756ec912",
                            "files.2": "714ae0c592f4aa6429e152a4e413b7e07fc8a85f8c475509cc7ef61a7222a187",
                            "files.3": "2827145276baee5602061e664ae50fe4ffe64cbd5800f0f2768cd27afdb4f9cc",
                            "files.4": "9a3bc3c55f1702645335bb4ce42f2e8214e7f53f81ba88746077590d10ccf594",
                            "files.5": "d3eba58d421baae23dde275f222e394872f66e4afd7505dc8db0dc71fb4adca6",
                            "files.6": "3dddac49bf409386fad151255a20db0c13cd1c03a3cbc079320bf6f59737ec66",
                            "files.7": "c8297e970a181947e07b7d3bc859bbeff4797f58f9656826ab53d8125cbe8cb8",
                            "files.8": "adeb59e42d2e537a2c53095b07e86dccad87b6712a798f8acff2ccc9afe416bc",
                            "files.9": "5927025f08f9d43d312066fa2961fb1988019aef65b8e64bd55b41c6a0d87dcf",
                            "filesystems.#": "1",
                            "filesystems.0": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "id": "ead9db67cff7504c0793aef365ed9191ec3ed7863d133b31bf1e350f89ba5406",
                            "rendered": "{\n    \"ignition\": {\n      \"version\": \"2.0.0\",\n      \"config\": {}\n    },\n    \"storage\": {\n      \"disks\": [\n        {\n          \"device\": \"/dev/sda\",\n          \"wipeTable\": true,\n          \"partitions\": [\n            {\n              \"label\": \"ROOT\",\n              \"number\": 0,\n              \"size\": 0,\n              \"start\": 0\n            }\n          ]\n        }\n      ],\n      \"filesystems\": [\n        {\n          \"name\": \"root\",\n          \"mount\": {\n            \"device\": \"/dev/sda1\",\n            \"format\": \"ext4\",\n            \"create\": {\n              \"force\": true,\n              \"options\": [\n                \"-L\",\n                \"ROOT\"\n              ]\n            }\n          }\n        }\n      ],\n      \"files\": [\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-apiserver.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtYXBpc2VydmVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtYXBpc2VydmVyCiAgICBpbWFnZTogcXVheS5pby9jb3Jlb3MvaHlwZXJrdWJlOnYxLjYuMl9jb3Jlb3MuMAogICAgY29tbWFuZDoKICAgIC0gL2h5cGVya3ViZQogICAgLSBhcGlzZXJ2ZXIKICAgIC0gLS1iaW5kLWFkZHJlc3M9MC4wLjAuMAogICAgLSAtLWV0Y2Qtc2VydmVycz1odHRwczovLzE5Mi4xNjguMS4xMDA6MjM3OQogICAgLSAtLWV0Y2QtY2FmaWxlPS9ldGMva3ViZXJuZXRlcy9zc2wvY2EucGVtCiAgICAtIC0tZXRjZC1jZXJ0ZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICAtIC0tZXRjZC1rZXlmaWxlPS9ldGMva3ViZXJuZXRlcy9zc2wvazhzLWFwaXNlcnZlci1rZXkucGVtCiAgICAtIC0tYWxsb3ctcHJpdmlsZWdlZD10cnVlCiAgICAtIC0tc2VydmljZS1jbHVzdGVyLWlwLXJhbmdlPTEwLjMuMC4wLzI0CiAgICAtIC0tc2VjdXJlLXBvcnQ9NDQzCiAgICAtIC0tYWR2ZXJ0aXNlLWFkZHJlc3M9MTkyLjE2OC4xLjEwMAogICAgLSAtLWFkbWlzc2lvbi1jb250cm9sPU5hbWVzcGFjZUxpZmVjeWNsZSxMaW1pdFJhbmdlcixTZXJ2aWNlQWNjb3VudCxSZXNvdXJjZVF1b3RhCiAgICAtIC0tdGxzLWNlcnQtZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICAtIC0tdGxzLXByaXZhdGUta2V5LWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9rOHMtYXBpc2VydmVyLWtleS5wZW0KICAgIC0gLS1jbGllbnQtY2EtZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2NhLnBlbQogICAgLSAtLXNlcnZpY2UtYWNjb3VudC1rZXktZmlsZT0vZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIta2V5LnBlbQogICAgLSAtLXNlcnZpY2UtYWNjb3VudC1sb29rdXA9dHJ1ZQogICAgLSAtLXJ1bnRpbWUtY29uZmlnPWV4dGVuc2lvbnMvdjFiZXRhMT10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS9kZXBsb3ltZW50cz10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS9kYWVtb25zZXRzPXRydWUsZXh0ZW5zaW9ucy92MWJldGExL25ldHdvcmtwb2xpY2llcz10cnVlLGV4dGVuc2lvbnMvdjFiZXRhMS90aGlyZHBhcnR5cmVzb3VyY2VzPXRydWUscmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MWJldGExPXRydWUsYmF0Y2gvdjJhbHBoYTE9dHJ1ZQogICAgLSAtLW9pZGMtaXNzdWVyLXVybD1odHRwczovL2FjY291bnRzLmdvb2dsZS5jb20KICAgIC0gLS1vaWRjLXVzZXJuYW1lLWNsYWltPWVtYWlsCiAgICAtIC0tb2lkYy1jbGllbnQtaWQ9NTI0MjQzNjAwODM2LWhqdXIzYnJvamhsdHQ4Y2dkdHFpczA3dWk4cGY1OTd0LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tCiAgICAtIC0tYXV0aG9yaXphdGlvbi1tb2RlPVJCQUMKICAgIC0gLS1hcGlzZXJ2ZXItY291bnQ9MQogICAgLSAtLWF1ZGl0LWxvZy1wYXRoPS9kZXYvc3Rkb3V0CiAgICAtIC0tc3RvcmFnZS1iYWNrZW5kPWV0Y2QzCiAgICAtIC0tc3RvcmFnZS1tZWRpYS10eXBlPWFwcGxpY2F0aW9uL2pzb24KICAgIC0gLS12PTAKICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgIGh0dHBHZXQ6CiAgICAgICAgaG9zdDogMTI3LjAuMC4xCiAgICAgICAgcG9ydDogODA4MAogICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxNQogICAgcG9ydHM6CiAgICAtIGNvbnRhaW5lclBvcnQ6IDQ0MwogICAgICBob3N0UG9ydDogNDQzCiAgICAgIG5hbWU6IGh0dHBzCiAgICAtIGNvbnRhaW5lclBvcnQ6IDgwODAKICAgICAgaG9zdFBvcnQ6IDgwODAKICAgICAgbmFtZTogbG9jYWwKICAgIHZvbHVtZU1vdW50czoKICAgIC0gbW91bnRQYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICAgIG5hbWU6IHNzbC1jZXJ0cy1rdWJlcm5ldGVzCiAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC9ldGMva3ViZXJuZXRlcy9zc2wKICAgIG5hbWU6IHNzbC1jZXJ0cy1rdWJlcm5ldGVzCiAgLSBob3N0UGF0aDoKICAgICAgcGF0aDogL3Vzci9zaGFyZS9jYS1jZXJ0aWZpY2F0ZXMKICAgIG5hbWU6IHNzbC1jZXJ0cy1ob3N0Cg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-proxy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtcHJveHkKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCnNwZWM6CiAgaG9zdE5ldHdvcms6IHRydWUKICBjb250YWluZXJzOgogIC0gbmFtZToga3ViZS1wcm94eQogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gcHJveHkKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tcHJveHktbW9kZT1pcHRhYmxlcwogICAgLSAtLXY9MAogICAgc2VjdXJpdHlDb250ZXh0OgogICAgICBwcml2aWxlZ2VkOiB0cnVlCiAgICB2b2x1bWVNb3VudHM6CiAgICAtIG1vdW50UGF0aDogL2V0Yy9zc2wvY2VydHMKICAgICAgbmFtZTogc3NsLWNlcnRzLWhvc3QKICAgICAgcmVhZE9ubHk6IHRydWUKICB2b2x1bWVzOgogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC91c3Ivc2hhcmUvY2EtY2VydGlmaWNhdGVzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-controller-manager.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY29udHJvbGxlci1tYW5hZ2VyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGNvbnRhaW5lcnM6CiAgLSBuYW1lOiBrdWJlLWNvbnRyb2xsZXItbWFuYWdlcgogICAgaW1hZ2U6IHF1YXkuaW8vY29yZW9zL2h5cGVya3ViZTp2MS42LjJfY29yZW9zLjAKICAgIGNvbW1hbmQ6CiAgICAtIC9oeXBlcmt1YmUKICAgIC0gY29udHJvbGxlci1tYW5hZ2VyCiAgICAtIC0tbWFzdGVyPWh0dHA6Ly8xMjcuMC4wLjE6ODA4MAogICAgLSAtLWxlYWRlci1lbGVjdD10cnVlCiAgICAtIC0tc2VydmljZS1hY2NvdW50LXByaXZhdGUta2V5LWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9rOHMtYXBpc2VydmVyLWtleS5wZW0KICAgIC0gLS1yb290LWNhLWZpbGU9L2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIC0gLS1jb25maWd1cmUtY2xvdWQtcm91dGVzPWZhbHNlCiAgICAtIC0tYWxsb2NhdGUtbm9kZS1jaWRycz10cnVlCiAgICAtIC0tY2x1c3Rlci1jaWRyPTEwLjIuMC4wLzE2CiAgICAtIC0tdj0wCiAgICByZXNvdXJjZXM6CiAgICAgIHJlcXVlc3RzOgogICAgICAgIGNwdTogMjAwbQogICAgbGl2ZW5lc3NQcm9iZToKICAgICAgaHR0cEdldDoKICAgICAgICBob3N0OiAxMjcuMC4wLjEKICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgIHBvcnQ6IDEwMjUyCiAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDE1CiAgICAgIHRpbWVvdXRTZWNvbmRzOiAxNQogICAgdm9sdW1lTW91bnRzOgogICAgLSBtb3VudFBhdGg6IC9ldGMva3ViZXJuZXRlcy9zc2wKICAgICAgbmFtZTogc3NsLWNlcnRzLWt1YmVybmV0ZXMKICAgICAgcmVhZE9ubHk6IHRydWUKICAgIC0gbW91bnRQYXRoOiAvZXRjL3NzbC9jZXJ0cwogICAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAogICAgICByZWFkT25seTogdHJ1ZQogIGhvc3ROZXR3b3JrOiB0cnVlCiAgdm9sdW1lczoKICAtIGhvc3RQYXRoOgogICAgICBwYXRoOiAvZXRjL2t1YmVybmV0ZXMvc3NsCiAgICBuYW1lOiBzc2wtY2VydHMta3ViZXJuZXRlcwogIC0gaG9zdFBhdGg6CiAgICAgIHBhdGg6IC91c3Ivc2hhcmUvY2EtY2VydGlmaWNhdGVzCiAgICBuYW1lOiBzc2wtY2VydHMtaG9zdAo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-scheduler.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogUG9kCm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQpzcGVjOgogIGhvc3ROZXR3b3JrOiB0cnVlCiAgY29udGFpbmVyczoKICAtIG5hbWU6IGt1YmUtc2NoZWR1bGVyCiAgICBpbWFnZTogcXVheS5pby9jb3Jlb3MvaHlwZXJrdWJlOnYxLjYuMl9jb3Jlb3MuMAogICAgY29tbWFuZDoKICAgIC0gL2h5cGVya3ViZQogICAgLSBzY2hlZHVsZXIKICAgIC0gLS1tYXN0ZXI9aHR0cDovLzEyNy4wLjAuMTo4MDgwCiAgICAtIC0tbGVhZGVyLWVsZWN0PXRydWUKICAgIC0gLS12PTAKICAgIHJlc291cmNlczoKICAgICAgcmVxdWVzdHM6CiAgICAgICAgY3B1OiAxMDBtCiAgICBsaXZlbmVzc1Byb2JlOgogICAgICBodHRwR2V0OgogICAgICAgIGhvc3Q6IDEyNy4wLjAuMQogICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgICAgcG9ydDogMTAyNTEKICAgICAgaW5pdGlhbERlbGF5U2Vjb25kczogMTUKICAgICAgdGltZW91dFNlY29uZHM6IDE1Cg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/kube-system.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJhcGlWZXJzaW9uIjogInYxIiwKICAia2luZCI6ICJOYW1lc3BhY2UiLAogICJtZXRhZGF0YSI6IHsKICAgICJuYW1lIjogImt1YmUtc3lzdGVtIgogIH0KfQo=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/manifests/network-policy.yaml\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,ewogICJraW5kIjogIlRoaXJkUGFydHlSZXNvdXJjZSIsCiAgImFwaVZlcnNpb24iOiAiZXh0ZW5zaW9ucy92MWJldGExIiwKICAibWV0YWRhdGEiOiB7CiAgICAibmFtZSI6ICJuZXR3b3JrLXBvbGljeS5uZXQuYWxwaGEua3ViZXJuZXRlcy5pbyIKICB9LAogICJkZXNjcmlwdGlvbiI6ICJTcGVjaWZpY2F0aW9uIGZvciBhIG5ldHdvcmsgaXNvbGF0aW9uIHBvbGljeSIsCiAgInZlcnNpb25zIjogWwogICAgewogICAgICAibmFtZSI6ICJ2MWFscGhhMSIKICAgIH0KICBdCn0K\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/kubernetes/kubeconfig\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,a2luZDogQ29uZmlnCmNsdXN0ZXJzOgotIG5hbWU6IGxvY2FsCiAgY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eTogL2V0Yy9rdWJlcm5ldGVzL3NzbC9jYS5wZW0KICAgIHNlcnZlcjogaHR0cDovLzEyNy4wLjAuMTo4MDgwCnVzZXJzOgotIG5hbWU6IGt1YmVsZXQKICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlOiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIucGVtCiAgICBjbGllbnQta2V5OiAvZXRjL2t1YmVybmV0ZXMvc3NsL2s4cy1hcGlzZXJ2ZXIta2V5LnBlbQpjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogbG9jYWwKICAgIHVzZXI6IGt1YmVsZXQKICBuYW1lOiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwKY3VycmVudC1jb250ZXh0OiBrdWJlbGV0LWNsdXN0ZXIubG9jYWwK\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/opt/bin/install-kube-system\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,IyEvYmluL2Jhc2ggLWUKL3Vzci9iaW4vY3VybCAtSCAiQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uIiAtWFBPU1QgLWQgQCIvc3J2L2t1YmVybmV0ZXMvbWFuaWZlc3RzL2t1YmUtc3lzdGVtLmpzb24iICJodHRwOi8vMTI3LjAuMC4xOjgwODAvYXBpL3YxL25hbWVzcGFjZXMiCg==\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/prom-text-collectors/machine_role.prom\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFjaGluZV9yb2xle3JvbGU9Im1hc3RlciJ9IDE=\",\n            \"verification\": {}\n          },\n          \"mode\": 644,\n          \"user\": {},\n          \"group\": {}\n        },\n        {\n          \"filesystem\": \"root\",\n          \"path\": \"/etc/hostname\",\n          \"contents\": {\n            \"source\": \"data:text/plain;charset=utf-8;base64,bWFzdGVyMC1ib3JnLnByb2QudXcuc3lzdGVtcw==\",\n            \"verification\": {}\n          },\n          \"mode\": 420,\n          \"user\": {},\n          \"group\": {}\n        }\n      ]\n    },\n    \"systemd\": {\n      \"units\": [\n        {\n          \"name\": \"etcd-member.service\",\n          \"enable\": true,\n          \"dropins\": [\n            {\n              \"name\": \"10-wait-etcd.conf\",\n              \"contents\": \"[Unit]\\nAfter=get-ssl.service\\nRequires=get-ssl.service\\n\"\n            },\n            {\n              \"name\": \"15-custom-options.conf\",\n              \"contents\": \"[Service]\\nExecStartPre=/usr/bin/mkdir -p /etc/etcd\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/lib/coreos/etcd-member-wrapper.uuid \\\\\\n  --volume etc-etcd,kind=host,source=/etc/etcd,readOnly=true \\\\\\n  --mount volume=etc-etcd,target=/etc/etcd\\\"\\n\"\n            },\n            {\n              \"name\": \"20-config.conf\",\n              \"contents\": \"[Service]\\nEnvironment=\\\"ETCD_IMAGE_URL=quay.io/coreos/etcd\\\"\\nEnvironment=\\\"ETCD_IMAGE_TAG=v3.1.6\\\"\\nEnvironment=\\\"ETCD_NAME=member0\\\"\\nEnvironment=\\\"ETCD_INITIAL_CLUSTER=member0=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_LISTEN_PEER_URLS=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\\\"\\nEnvironment=\\\"ETCD_ADVERTISE_CLIENT_URLS=https://192.168.1.100:2379\\\"\\nEnvironment=\\\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://192.168.1.100:2380\\\"\\nEnvironment=\\\"ETCD_CLIENT_CERT_AUTH=true\\\"\\nEnvironment=\\\"ETCD_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\\\"\\nEnvironment=\\\"ETCD_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\\\"\\nEnvironment=\\\"ETCD_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\\\"\\nEnvironment=\\\"ETCD_PEER_CLIENT_CERT_AUTH=true\\\"\\nEnvironment=\\\"ETCD_PEER_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\\\"\\nEnvironment=\\\"ETCD_PEER_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\\\"\\nEnvironment=\\\"ETCD_PEER_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\\\"\\n\"\n            }\n          ]\n        },\n        {\n          \"name\": \"kubelet.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nRequires=docker.service\\nAfter=docker.service\\n[Service]\\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\\nEnvironment=\\\"RKT_RUN_ARGS=\\\\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\\\\n  --volume var-log,kind=host,source=/var/log \\\\\\n  --mount volume=var-log,target=/var/log \\\\\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\\\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\\\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\\\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\\\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\\\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\\\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\\\\n  --mount volume=dns,target=/etc/resolv.conf\\\"\\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\\\\n  --require-kubeconfig=true \\\\\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\\\\n  --node-labels=role=master \\\\\\n  --register-node=true \\\\\\n  --register-schedulable=false \\\\\\n  --container-runtime=docker \\\\\\n  --network-plugin-dir=/etc/cni/net.d \\\\\\n  --network-plugin=cni \\\\\\n  --cni-bin-dir=/opt/cni/bin \\\\\\n  --cni-conf-dir=/etc/cni/net.d \\\\\\n  --allow-privileged=true \\\\\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\\\\n  --cluster-dns=10.3.0.10 \\\\\\n  --cluster-domain=cluster.local\\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\\nRestart=always\\nRestartSec=10\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        },\n        {\n          \"name\": \"install-kube-system.service\",\n          \"enable\": true,\n          \"contents\": \"#!/bin/bash -e\\n/usr/bin/curl -H \\\"Content-Type: application/json\\\" -XPOST -d @\\\"/srv/kubernetes/manifests/kube-system.json\\\" \\\"http://127.0.0.1:8080/api/v1/namespaces\\\"\\n\"\n        },\n        {\n          \"name\": \"get-ssl.service\",\n          \"enable\": true,\n          \"contents\": \"[Unit]\\nDescription=Get ssl artifacts from s3 bucket using IAM role\\nAfter=network.target\\n[Service]\\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\\nExecStartPre=/bin/sh -c \\\"until curl -sL http://192.168.1.1:8000; do sleep 2; done\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\\\"\\nExecStart=/bin/sh -c \\\"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\\\"\\nRemainAfterExit=yes\\nType=oneshot\\n[Install]\\nWantedBy=multi-user.target\\n\"\n        }\n      ]\n    },\n    \"networkd\": {},\n    \"passwd\": {}\n  }",
                            "systemd.#": "4",
                            "systemd.0": "da1dd3b4c458010225978d26e377a7dad5bc9983b1f57e1828804fed16e3af72",
                            "systemd.1": "37d17ffb64ff576c3668b020e95045396fcce4f23e19b665379590b07d0965e7",
                            "systemd.2": "1da7fc866abf39db1229edc3476272b5635c36b44507bcd4109b0c99cdfcdd97",
                            "systemd.3": "8e9a617aca3089b80b137419a2b1ae8b580cb263c735b02036fc33afabae7fd9"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_disk.devsda": {
                    "type": "ignition_disk",
                    "depends_on": [],
                    "primary": {
                        "id": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                        "attributes": {
                            "device": "/dev/sda",
                            "id": "ef117b14bd2aa62c92868b9dd175ad89da89a3655dfc23a1f4eb5008e4045434",
                            "partition.#": "1",
                            "partition.0.label": "ROOT",
                            "partition.0.number": "0",
                            "partition.0.size": "0",
                            "partition.0.start": "0",
                            "partition.0.type_guid": "",
                            "wipe_table": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_disk.nvme0n1": {
                    "type": "ignition_disk",
                    "depends_on": [],
                    "primary": {
                        "id": "09528e085503b0702bcedafb00b0f522eb753d1041ee28b881026246edaab743",
                        "attributes": {
                            "device": "/dev/nvme0n1",
                            "id": "09528e085503b0702bcedafb00b0f522eb753d1041ee28b881026246edaab743",
                            "partition.#": "1",
                            "partition.0.label": "ROOT",
                            "partition.0.number": "0",
                            "partition.0.size": "0",
                            "partition.0.start": "0",
                            "partition.0.type_guid": "",
                            "wipe_table": "true"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.atx-hostname": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "bb64754bf438c4cd0484dbae0b4abe05eead3307413c39765c7e5875a5e519c3",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "atx-worker0-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "bb64754bf438c4cd0484dbae0b4abe05eead3307413c39765c7e5875a5e519c3",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.dell-hostname.0": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "8c38cf9882e3d6b94cc002273171eb1ef8a111d3e84a3262c94fdc67414b41bb",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "worker0-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "8c38cf9882e3d6b94cc002273171eb1ef8a111d3e84a3262c94fdc67414b41bb",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.dell-hostname.1": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c9ab93d2c692275ae15e0064c1ea08fac1278345b1c69300461e4d6eecd18327",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "worker1-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "c9ab93d2c692275ae15e0064c1ea08fac1278345b1c69300461e4d6eecd18327",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.dell-hostname.2": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "67cbe1200abdc2646f39f07ef00bd27e0720b559f42aab41a4a2635cb1990f9b",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "worker2-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "67cbe1200abdc2646f39f07ef00bd27e0720b559f42aab41a4a2635cb1990f9b",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.dell-hostname.3": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "6cea85daced8193dbcd42f5aad72eed1df47d9a042f6a7d62f3c28b22e537d7b",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "worker3-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "6cea85daced8193dbcd42f5aad72eed1df47d9a042f6a7d62f3c28b22e537d7b",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.install-kube-system": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.install-kube-system"
                    ],
                    "primary": {
                        "id": "c8297e970a181947e07b7d3bc859bbeff4797f58f9656826ab53d8125cbe8cb8",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "#!/bin/bash -e\n/usr/bin/curl -H \"Content-Type: application/json\" -XPOST -d @\"/srv/kubernetes/manifests/kube-system.json\" \"http://127.0.0.1:8080/api/v1/namespaces\"\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "c8297e970a181947e07b7d3bc859bbeff4797f58f9656826ab53d8125cbe8cb8",
                            "mode": "644",
                            "path": "/opt/bin/install-kube-system"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-apiserver": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-apiserver"
                    ],
                    "primary": {
                        "id": "fbc953bae7fb0708b1bddb9d738f02a64a0d29a1c8df8513ceaedd2077052785",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - apiserver\n    - --bind-address=0.0.0.0\n    - --etcd-servers=https://192.168.1.100:2379\n    - --etcd-cafile=/etc/kubernetes/ssl/ca.pem\n    - --etcd-certfile=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --etcd-keyfile=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --allow-privileged=true\n    - --service-cluster-ip-range=10.3.0.0/24\n    - --secure-port=443\n    - --advertise-address=192.168.1.100\n    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota\n    - --tls-cert-file=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --tls-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --client-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --service-account-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --service-account-lookup=true\n    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/thirdpartyresources=true,rbac.authorization.k8s.io/v1beta1=true,batch/v2alpha1=true\n    - --oidc-issuer-url=https://accounts.google.com\n    - --oidc-username-claim=email\n    - --oidc-client-id=524243600836-hjur3brojhltt8cgdtqis07ui8pf597t.apps.googleusercontent.com\n    - --authorization-mode=RBAC\n    - --apiserver-count=1\n    - --audit-log-path=/dev/stdout\n    - --storage-backend=etcd3\n    - --storage-media-type=application/json\n    - --v=0\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        port: 8080\n        path: /healthz\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    ports:\n    - containerPort: 443\n      hostPort: 443\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "fbc953bae7fb0708b1bddb9d738f02a64a0d29a1c8df8513ceaedd2077052785",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-apiserver.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-controller-manager": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-controller-manager"
                    ],
                    "primary": {
                        "id": "714ae0c592f4aa6429e152a4e413b7e07fc8a85f8c475509cc7ef61a7222a187",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - controller-manager\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --service-account-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --root-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --configure-cloud-routes=false\n    - --allocate-node-cidrs=true\n    - --cluster-cidr=10.2.0.0/16\n    - --v=0\n    resources:\n      requests:\n        cpu: 200m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  hostNetwork: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "714ae0c592f4aa6429e152a4e413b7e07fc8a85f8c475509cc7ef61a7222a187",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-controller-manager.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-proxy": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-proxy"
                    ],
                    "primary": {
                        "id": "5489b9992855b592f7eaa0315d438e894573688ddcd3a2f2412f9be3756ec912",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - proxy\n    - --master=http://127.0.0.1:8080\n    - --proxy-mode=iptables\n    - --v=0\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "5489b9992855b592f7eaa0315d438e894573688ddcd3a2f2412f9be3756ec912",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-proxy.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-proxy-worker": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-proxy-worker"
                    ],
                    "primary": {
                        "id": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - proxy\n    - --kubeconfig=/etc/kubernetes/kubeconfig\n    - --master=https://192.168.1.100\n    - --proxy-mode=iptables\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n      limits:\n        cpu: 100m\n        memory: 100Mi\n    securityContext:\n      privileged: true\n    volumeMounts:\n      - mountPath: /etc/ssl/certs\n        name: \"ssl-certs\"\n      - mountPath: /etc/kubernetes/kubeconfig\n        name: \"kubeconfig\"\n        readOnly: true\n      - mountPath: /etc/kubernetes/ssl\n        name: \"etc-kube-ssl\"\n        readOnly: true\n  volumes:\n    - name: \"ssl-certs\"\n      hostPath:\n        path: \"/usr/share/ca-certificates\"\n    - name: \"kubeconfig\"\n      hostPath:\n        path: \"/etc/kubernetes/kubeconfig\"\n    - name: \"etc-kube-ssl\"\n      hostPath:\n        path: \"/etc/kubernetes/ssl\"\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "aa957d27d8ef81cf3b8d809a25574881472f916fd15b1d31faf8550fc6c950dd",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-proxy.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-scheduler": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-scheduler"
                    ],
                    "primary": {
                        "id": "2827145276baee5602061e664ae50fe4ffe64cbd5800f0f2768cd27afdb4f9cc",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - scheduler\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "2827145276baee5602061e664ae50fe4ffe64cbd5800f0f2768cd27afdb4f9cc",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-scheduler.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.kube-system": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.kube-system"
                    ],
                    "primary": {
                        "id": "9a3bc3c55f1702645335bb4ce42f2e8214e7f53f81ba88746077590d10ccf594",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Namespace\",\n  \"metadata\": {\n    \"name\": \"kube-system\"\n  }\n}\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "9a3bc3c55f1702645335bb4ce42f2e8214e7f53f81ba88746077590d10ccf594",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/kube-system.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.master-hostname": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "5927025f08f9d43d312066fa2961fb1988019aef65b8e64bd55b41c6a0d87dcf",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "master0-borg.prod.uw.systems",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "5927025f08f9d43d312066fa2961fb1988019aef65b8e64bd55b41c6a0d87dcf",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.master-kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.master-kubeconfig"
                    ],
                    "primary": {
                        "id": "3dddac49bf409386fad151255a20db0c13cd1c03a3cbc079320bf6f59737ec66",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: http://127.0.0.1:8080\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/k8s-apiserver.pem\n    client-key: /etc/kubernetes/ssl/k8s-apiserver-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3dddac49bf409386fad151255a20db0c13cd1c03a3cbc079320bf6f59737ec66",
                            "mode": "644",
                            "path": "/etc/kubernetes/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.master-machine-role": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "adeb59e42d2e537a2c53095b07e86dccad87b6712a798f8acff2ccc9afe416bc",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "machine_role{role=\"master\"} 1",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "adeb59e42d2e537a2c53095b07e86dccad87b6712a798f8acff2ccc9afe416bc",
                            "mode": "644",
                            "path": "/etc/prom-text-collectors/machine_role.prom"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.network-policy": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.network-policy"
                    ],
                    "primary": {
                        "id": "d3eba58d421baae23dde275f222e394872f66e4afd7505dc8db0dc71fb4adca6",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "{\n  \"kind\": \"ThirdPartyResource\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"network-policy.net.alpha.kubernetes.io\"\n  },\n  \"description\": \"Specification for a network isolation policy\",\n  \"versions\": [\n    {\n      \"name\": \"v1alpha1\"\n    }\n  ]\n}\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "d3eba58d421baae23dde275f222e394872f66e4afd7505dc8db0dc71fb4adca6",
                            "mode": "644",
                            "path": "/etc/kubernetes/manifests/network-policy.yaml"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.worker-kubeconfig": {
                    "type": "ignition_file",
                    "depends_on": [
                        "data.template_file.worker-kubeconfig"
                    ],
                    "primary": {
                        "id": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: https://192.168.1.100\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/k8s-worker.pem\n    client-key: /etc/kubernetes/ssl/k8s-worker-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "2aa0f8e4be8a49a22daeedbeff925d50a15f3ce0bf266f5592a085b769e41ea7",
                            "mode": "644",
                            "path": "/etc/kubernetes/kubeconfig"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_file.worker-machine-role": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "machine_role{role=\"worker\"} 1",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "ede2a789f449d8f03e1207b03e62c32bdc817f02544bc26e5030074ab30a42de",
                            "mode": "644",
                            "path": "/etc/prom-text-collectors/machine_role.prom"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_filesystem.nvme0n1root": {
                    "type": "ignition_filesystem",
                    "depends_on": [],
                    "primary": {
                        "id": "a960d14cb5eaca4a9d834983072ed768c1c1f784b246f30ef86c629069690057",
                        "attributes": {
                            "id": "a960d14cb5eaca4a9d834983072ed768c1c1f784b246f30ef86c629069690057",
                            "mount.#": "1",
                            "mount.0.create": "true",
                            "mount.0.device": "/dev/nvme0n1p1",
                            "mount.0.force": "true",
                            "mount.0.format": "ext4",
                            "mount.0.options.#": "2",
                            "mount.0.options.0": "-L",
                            "mount.0.options.1": "ROOT",
                            "name": "root"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_filesystem.root": {
                    "type": "ignition_filesystem",
                    "depends_on": [],
                    "primary": {
                        "id": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                        "attributes": {
                            "id": "47c6d2709d349018cc2dcd2df50debf50c792eca45c248f40ac1faa3a5536143",
                            "mount.#": "1",
                            "mount.0.create": "true",
                            "mount.0.device": "/dev/sda1",
                            "mount.0.force": "true",
                            "mount.0.format": "ext4",
                            "mount.0.options.#": "2",
                            "mount.0.options.0": "-L",
                            "mount.0.options.1": "ROOT",
                            "name": "root"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.etcd-member": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [],
                    "primary": {
                        "id": "da1dd3b4c458010225978d26e377a7dad5bc9983b1f57e1828804fed16e3af72",
                        "attributes": {
                            "dropin.#": "3",
                            "dropin.0.content": "[Unit]\nAfter=get-ssl.service\nRequires=get-ssl.service\n",
                            "dropin.0.name": "10-wait-etcd.conf",
                            "dropin.1.content": "[Service]\nExecStartPre=/usr/bin/mkdir -p /etc/etcd\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/lib/coreos/etcd-member-wrapper.uuid \\\n  --volume etc-etcd,kind=host,source=/etc/etcd,readOnly=true \\\n  --mount volume=etc-etcd,target=/etc/etcd\"\n",
                            "dropin.1.name": "15-custom-options.conf",
                            "dropin.2.content": "[Service]\nEnvironment=\"ETCD_IMAGE_URL=quay.io/coreos/etcd\"\nEnvironment=\"ETCD_IMAGE_TAG=v3.1.6\"\nEnvironment=\"ETCD_NAME=member0\"\nEnvironment=\"ETCD_INITIAL_CLUSTER=member0=https://192.168.1.100:2380\"\nEnvironment=\"ETCD_LISTEN_PEER_URLS=https://192.168.1.100:2380\"\nEnvironment=\"ETCD_LISTEN_CLIENT_URLS=https://0.0.0.0:2379\"\nEnvironment=\"ETCD_ADVERTISE_CLIENT_URLS=https://192.168.1.100:2379\"\nEnvironment=\"ETCD_INITIAL_ADVERTISE_PEER_URLS=https://192.168.1.100:2380\"\nEnvironment=\"ETCD_CLIENT_CERT_AUTH=true\"\nEnvironment=\"ETCD_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\"\nEnvironment=\"ETCD_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\"\nEnvironment=\"ETCD_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\"\nEnvironment=\"ETCD_PEER_CLIENT_CERT_AUTH=true\"\nEnvironment=\"ETCD_PEER_TRUSTED_CA_FILE=/etc/etcd/ssl/ca.pem\"\nEnvironment=\"ETCD_PEER_CERT_FILE=/etc/etcd/ssl/k8s-etcd.pem\"\nEnvironment=\"ETCD_PEER_KEY_FILE=/etc/etcd/ssl/k8s-etcd-key.pem\"\n",
                            "dropin.2.name": "20-config.conf",
                            "enable": "true",
                            "id": "da1dd3b4c458010225978d26e377a7dad5bc9983b1f57e1828804fed16e3af72",
                            "name": "etcd-member.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.get-ssl": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.get-ssl"
                    ],
                    "primary": {
                        "id": "8e9a617aca3089b80b137419a2b1ae8b580cb263c735b02036fc33afabae7fd9",
                        "attributes": {
                            "content": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n",
                            "enable": "true",
                            "id": "8e9a617aca3089b80b137419a2b1ae8b580cb263c735b02036fc33afabae7fd9",
                            "name": "get-ssl.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.get-ssl-worker": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.get-ssl-worker"
                    ],
                    "primary": {
                        "id": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665",
                        "attributes": {
                            "content": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n",
                            "enable": "true",
                            "id": "3858a783b03666861e7b28da25e379169e2b3922ebbea4440d671890d14bd665",
                            "name": "get-ssl.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.install-kube-system": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.install-kube-system"
                    ],
                    "primary": {
                        "id": "1da7fc866abf39db1229edc3476272b5635c36b44507bcd4109b0c99cdfcdd97",
                        "attributes": {
                            "content": "#!/bin/bash -e\n/usr/bin/curl -H \"Content-Type: application/json\" -XPOST -d @\"/srv/kubernetes/manifests/kube-system.json\" \"http://127.0.0.1:8080/api/v1/namespaces\"\n",
                            "enable": "true",
                            "id": "1da7fc866abf39db1229edc3476272b5635c36b44507bcd4109b0c99cdfcdd97",
                            "name": "install-kube-system.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.kubelet": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet"
                    ],
                    "primary": {
                        "id": "37d17ffb64ff576c3668b020e95045396fcce4f23e19b665379590b07d0965e7",
                        "attributes": {
                            "content": "[Unit]\nRequires=docker.service\nAfter=docker.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=master \\\n  --register-node=true \\\n  --register-schedulable=false \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster-dns=10.3.0.10 \\\n  --cluster-domain=cluster.local\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "enable": "true",
                            "id": "37d17ffb64ff576c3668b020e95045396fcce4f23e19b665379590b07d0965e7",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.ignition_systemd_unit.kubelet-worker": {
                    "type": "ignition_systemd_unit",
                    "depends_on": [
                        "data.template_file.kubelet-worker"
                    ],
                    "primary": {
                        "id": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                        "attributes": {
                            "content": "[Unit]\nAfter=get-ssl.service\nRequires=get-ssl.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=worker \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --register-node=true \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster_dns=10.3.0.10 \\\n  --cluster_domain=cluster.local \\\n  --eviction-soft=memory.available\u003c1Gi,nodefs.available\u003c2Gi \\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\n  --eviction-max-pod-grace-period=30 \\\n  --eviction-hard=memory.available\u003c512Mi,nodefs.available\u003c1Gi\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "enable": "true",
                            "id": "e1e9e8c82f2932916774e2b88a565aac8c6d1d4988c68fb92fcba882f60dd0cc",
                            "name": "kubelet.service"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.get-ssl": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "01348a41f6eeea419da7fb8c36c21f4e6c0bcf4194ec0e57c0d74ffb28690fd7",
                        "attributes": {
                            "id": "01348a41f6eeea419da7fb8c36c21f4e6c0bcf4194ec0e57c0d74ffb28690fd7",
                            "rendered": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.get-ssl-worker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "65273202c9b653a9f4e988826ca478928b755a6f8bb2e91810d3e01d7f8fd330",
                        "attributes": {
                            "id": "65273202c9b653a9f4e988826ca478928b755a6f8bb2e91810d3e01d7f8fd330",
                            "rendered": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-worker.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n[Install]\nWantedBy=multi-user.target\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.install-kube-system": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "0b762a7f11aae2e8d19c0ac0b95314e61d0a0f9e4efc7e5a23996e24d03ed287",
                        "attributes": {
                            "id": "0b762a7f11aae2e8d19c0ac0b95314e61d0a0f9e4efc7e5a23996e24d03ed287",
                            "rendered": "#!/bin/bash -e\n/usr/bin/curl -H \"Content-Type: application/json\" -XPOST -d @\"/srv/kubernetes/manifests/kube-system.json\" \"http://127.0.0.1:8080/api/v1/namespaces\"\n",
                            "template": "#!/bin/bash -e\n/usr/bin/curl -H \"Content-Type: application/json\" -XPOST -d @\"/srv/kubernetes/manifests/kube-system.json\" \"http://127.0.0.1:8080/api/v1/namespaces\"\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.install-kube-system-service": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "82c89c6ee3c22236b0257bba0280a34a5fcdca7f3fff4c976cd26d89d515adf2",
                        "attributes": {
                            "id": "82c89c6ee3c22236b0257bba0280a34a5fcdca7f3fff4c976cd26d89d515adf2",
                            "rendered": "[Unit]\nRequires=kubelet.service docker.service\nAfter=kubelet.service docker.service\n[Service]\nType=simple\nStartLimitInterval=0\nRestart=on-failure\nRestartSec=10\nExecStartPre=/usr/bin/curl http://127.0.0.1:8080/version\nExecStart=/opt/bin/install-kube-system\n",
                            "template": "[Unit]\nRequires=kubelet.service docker.service\nAfter=kubelet.service docker.service\n[Service]\nType=simple\nStartLimitInterval=0\nRestart=on-failure\nRestartSec=10\nExecStartPre=/usr/bin/curl http://127.0.0.1:8080/version\nExecStart=/opt/bin/install-kube-system\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-apiserver": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dec822b229c0d07bbefeee17e559f0b0b3aafa5fad9b91ca0738463d46c537b6",
                        "attributes": {
                            "id": "dec822b229c0d07bbefeee17e559f0b0b3aafa5fad9b91ca0738463d46c537b6",
                            "rendered": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - apiserver\n    - --bind-address=0.0.0.0\n    - --etcd-servers=https://192.168.1.100:2379\n    - --etcd-cafile=/etc/kubernetes/ssl/ca.pem\n    - --etcd-certfile=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --etcd-keyfile=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --allow-privileged=true\n    - --service-cluster-ip-range=10.3.0.0/24\n    - --secure-port=443\n    - --advertise-address=192.168.1.100\n    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota\n    - --tls-cert-file=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --tls-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --client-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --service-account-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --service-account-lookup=true\n    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/thirdpartyresources=true,rbac.authorization.k8s.io/v1beta1=true,batch/v2alpha1=true\n    - --oidc-issuer-url=https://accounts.google.com\n    - --oidc-username-claim=email\n    - --oidc-client-id=524243600836-hjur3brojhltt8cgdtqis07ui8pf597t.apps.googleusercontent.com\n    - --authorization-mode=RBAC\n    - --apiserver-count=1\n    - --audit-log-path=/dev/stdout\n    - --storage-backend=etcd3\n    - --storage-media-type=application/json\n    - --v=0\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        port: 8080\n        path: /healthz\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    ports:\n    - containerPort: 443\n      hostPort: 443\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "template": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-apiserver\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-apiserver\n    image: ${hyperkube_image}\n    command:\n    - /hyperkube\n    - apiserver\n    - --bind-address=0.0.0.0\n    - --etcd-servers=https://192.168.1.100:2379\n    - --etcd-cafile=/etc/kubernetes/ssl/ca.pem\n    - --etcd-certfile=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --etcd-keyfile=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --allow-privileged=true\n    - --service-cluster-ip-range=10.3.0.0/24\n    - --secure-port=443\n    - --advertise-address=192.168.1.100\n    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota\n    - --tls-cert-file=/etc/kubernetes/ssl/k8s-apiserver.pem\n    - --tls-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --client-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --service-account-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --service-account-lookup=true\n    - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/deployments=true,extensions/v1beta1/daemonsets=true,extensions/v1beta1/networkpolicies=true,extensions/v1beta1/thirdpartyresources=true,rbac.authorization.k8s.io/v1beta1=true,batch/v2alpha1=true\n    - --oidc-issuer-url=https://accounts.google.com\n    - --oidc-username-claim=email\n    - --oidc-client-id=524243600836-hjur3brojhltt8cgdtqis07ui8pf597t.apps.googleusercontent.com\n    - --authorization-mode=RBAC\n    - --apiserver-count=1\n    - --audit-log-path=/dev/stdout\n    - --storage-backend=etcd3\n    - --storage-media-type=application/json\n    - --v=0\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        port: 8080\n        path: /healthz\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    ports:\n    - containerPort: 443\n      hostPort: 443\n      name: https\n    - containerPort: 8080\n      hostPort: 8080\n      name: local\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "vars.%": "1",
                            "vars.hyperkube_image": "quay.io/coreos/hyperkube:v1.6.2_coreos.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-controller-manager": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "4a83ce8671ece9cae98baa9f1534eec06ba7a5f1aca08494d3c31488aa3a29df",
                        "attributes": {
                            "id": "4a83ce8671ece9cae98baa9f1534eec06ba7a5f1aca08494d3c31488aa3a29df",
                            "rendered": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  containers:\n  - name: kube-controller-manager\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - controller-manager\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --service-account-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --root-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --configure-cloud-routes=false\n    - --allocate-node-cidrs=true\n    - --cluster-cidr=10.2.0.0/16\n    - --v=0\n    resources:\n      requests:\n        cpu: 200m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  hostNetwork: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "template": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-controller-manager\n  namespace: kube-system\nspec:\n  containers:\n  - name: kube-controller-manager\n    image: ${hyperkube_image}\n    command:\n    - /hyperkube\n    - controller-manager\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --service-account-private-key-file=/etc/kubernetes/ssl/k8s-apiserver-key.pem\n    - --root-ca-file=/etc/kubernetes/ssl/ca.pem\n    - --configure-cloud-routes=false\n    - --allocate-node-cidrs=true\n    - --cluster-cidr=10.2.0.0/16\n    - --v=0\n    resources:\n      requests:\n        cpu: 200m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10252\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n    volumeMounts:\n    - mountPath: /etc/kubernetes/ssl\n      name: ssl-certs-kubernetes\n      readOnly: true\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  hostNetwork: true\n  volumes:\n  - hostPath:\n      path: /etc/kubernetes/ssl\n    name: ssl-certs-kubernetes\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "vars.%": "1",
                            "vars.hyperkube_image": "quay.io/coreos/hyperkube:v1.6.2_coreos.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-proxy": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "890757d9522392797e6a065e8c7d2a98c6ac27a7f0639f73a4ca77af6dbe0e94",
                        "attributes": {
                            "id": "890757d9522392797e6a065e8c7d2a98c6ac27a7f0639f73a4ca77af6dbe0e94",
                            "rendered": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - proxy\n    - --master=http://127.0.0.1:8080\n    - --proxy-mode=iptables\n    - --v=0\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "template": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: ${hyperkube_image}\n    command:\n    - /hyperkube\n    - proxy\n    - --master=http://127.0.0.1:8080\n    - --proxy-mode=iptables\n    - --v=0\n    securityContext:\n      privileged: true\n    volumeMounts:\n    - mountPath: /etc/ssl/certs\n      name: ssl-certs-host\n      readOnly: true\n  volumes:\n  - hostPath:\n      path: /usr/share/ca-certificates\n    name: ssl-certs-host\n",
                            "vars.%": "1",
                            "vars.hyperkube_image": "quay.io/coreos/hyperkube:v1.6.2_coreos.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-proxy-worker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "009a81262586e9328ad6093444e84f249b8aad96a95b343b435432aacb87afb9",
                        "attributes": {
                            "id": "009a81262586e9328ad6093444e84f249b8aad96a95b343b435432aacb87afb9",
                            "rendered": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - proxy\n    - --kubeconfig=/etc/kubernetes/kubeconfig\n    - --master=https://192.168.1.100\n    - --proxy-mode=iptables\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n      limits:\n        cpu: 100m\n        memory: 100Mi\n    securityContext:\n      privileged: true\n    volumeMounts:\n      - mountPath: /etc/ssl/certs\n        name: \"ssl-certs\"\n      - mountPath: /etc/kubernetes/kubeconfig\n        name: \"kubeconfig\"\n        readOnly: true\n      - mountPath: /etc/kubernetes/ssl\n        name: \"etc-kube-ssl\"\n        readOnly: true\n  volumes:\n    - name: \"ssl-certs\"\n      hostPath:\n        path: \"/usr/share/ca-certificates\"\n    - name: \"kubeconfig\"\n      hostPath:\n        path: \"/etc/kubernetes/kubeconfig\"\n    - name: \"etc-kube-ssl\"\n      hostPath:\n        path: \"/etc/kubernetes/ssl\"\n",
                            "template": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-proxy\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-proxy\n    image: ${hyperkube_image}\n    command:\n    - /hyperkube\n    - proxy\n    - --kubeconfig=/etc/kubernetes/kubeconfig\n    - --master=https://192.168.1.100\n    - --proxy-mode=iptables\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n        memory: 100Mi\n      limits:\n        cpu: 100m\n        memory: 100Mi\n    securityContext:\n      privileged: true\n    volumeMounts:\n      - mountPath: /etc/ssl/certs\n        name: \"ssl-certs\"\n      - mountPath: /etc/kubernetes/kubeconfig\n        name: \"kubeconfig\"\n        readOnly: true\n      - mountPath: /etc/kubernetes/ssl\n        name: \"etc-kube-ssl\"\n        readOnly: true\n  volumes:\n    - name: \"ssl-certs\"\n      hostPath:\n        path: \"/usr/share/ca-certificates\"\n    - name: \"kubeconfig\"\n      hostPath:\n        path: \"/etc/kubernetes/kubeconfig\"\n    - name: \"etc-kube-ssl\"\n      hostPath:\n        path: \"/etc/kubernetes/ssl\"\n",
                            "vars.%": "1",
                            "vars.hyperkube_image": "quay.io/coreos/hyperkube:v1.6.2_coreos.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-scheduler": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "699bdb7498a2527ae006813187c0ea4559a71d4f38979313c2142c179624ebb2",
                        "attributes": {
                            "id": "699bdb7498a2527ae006813187c0ea4559a71d4f38979313c2142c179624ebb2",
                            "rendered": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: quay.io/coreos/hyperkube:v1.6.2_coreos.0\n    command:\n    - /hyperkube\n    - scheduler\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n",
                            "template": "apiVersion: v1\nkind: Pod\nmetadata:\n  name: kube-scheduler\n  namespace: kube-system\nspec:\n  hostNetwork: true\n  containers:\n  - name: kube-scheduler\n    image: ${hyperkube_image}\n    command:\n    - /hyperkube\n    - scheduler\n    - --master=http://127.0.0.1:8080\n    - --leader-elect=true\n    - --v=0\n    resources:\n      requests:\n        cpu: 100m\n    livenessProbe:\n      httpGet:\n        host: 127.0.0.1\n        path: /healthz\n        port: 10251\n      initialDelaySeconds: 15\n      timeoutSeconds: 15\n",
                            "vars.%": "1",
                            "vars.hyperkube_image": "quay.io/coreos/hyperkube:v1.6.2_coreos.0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kube-system": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "03760fca8d24bfcadaf339c37bfa9ea080a6c0681456d7f26f303ef3d212b374",
                        "attributes": {
                            "id": "03760fca8d24bfcadaf339c37bfa9ea080a6c0681456d7f26f303ef3d212b374",
                            "rendered": "{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Namespace\",\n  \"metadata\": {\n    \"name\": \"kube-system\"\n  }\n}\n",
                            "template": "{\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Namespace\",\n  \"metadata\": {\n    \"name\": \"kube-system\"\n  }\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kubelet": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dea38ada55c055b5285e197e1f6f6f05551c0b008ed923b8ae73fc600f4d7817",
                        "attributes": {
                            "id": "dea38ada55c055b5285e197e1f6f6f05551c0b008ed923b8ae73fc600f4d7817",
                            "rendered": "[Unit]\nRequires=docker.service\nAfter=docker.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=master \\\n  --register-node=true \\\n  --register-schedulable=false \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster-dns=10.3.0.10 \\\n  --cluster-domain=cluster.local\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nRequires=docker.service\nAfter=docker.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=${kubelet_image_url}\nEnvironment=KUBELET_IMAGE_TAG=${kubelet_image_tag}\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=master \\\n  --register-node=true \\\n  --register-schedulable=false \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster-dns=10.3.0.10 \\\n  --cluster-domain=cluster.local\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "2",
                            "vars.kubelet_image_tag": "v1.6.2_coreos.0",
                            "vars.kubelet_image_url": "quay.io/coreos/hyperkube"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.kubelet-worker": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "509511d626688e3b85556368fa291f4089e360363737511cdd90e46863914b31",
                        "attributes": {
                            "id": "509511d626688e3b85556368fa291f4089e360363737511cdd90e46863914b31",
                            "rendered": "[Unit]\nAfter=get-ssl.service\nRequires=get-ssl.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=worker \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --register-node=true \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster_dns=10.3.0.10 \\\n  --cluster_domain=cluster.local \\\n  --eviction-soft=memory.available\u003c1Gi,nodefs.available\u003c2Gi \\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\n  --eviction-max-pod-grace-period=30 \\\n  --eviction-hard=memory.available\u003c512Mi,nodefs.available\u003c1Gi\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "template": "[Unit]\nAfter=get-ssl.service\nRequires=get-ssl.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=${kubelet_image_url}\nEnvironment=KUBELET_IMAGE_TAG=${kubelet_image_tag}\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume etc-cni-netd,kind=host,source=/etc/cni/net.d \\\n  --mount volume=etc-cni-netd,target=/etc/cni/net.d \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=worker \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/cni/net.d \\\n  --register-node=true \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster_dns=10.3.0.10 \\\n  --cluster_domain=cluster.local \\\n  --eviction-soft=memory.available\u003c1Gi,nodefs.available\u003c2Gi \\\n  --eviction-soft-grace-period=memory.available=1m,nodefs.available=1m \\\n  --eviction-max-pod-grace-period=30 \\\n  --eviction-hard=memory.available\u003c512Mi,nodefs.available\u003c1Gi\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n",
                            "vars.%": "2",
                            "vars.kubelet_image_tag": "v1.6.2_coreos.0",
                            "vars.kubelet_image_url": "quay.io/coreos/hyperkube"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.master-kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "dcba0d05154d4e52f04b200fc9746aad2710d9283e6261f6de54a329fc1daa38",
                        "attributes": {
                            "id": "dcba0d05154d4e52f04b200fc9746aad2710d9283e6261f6de54a329fc1daa38",
                            "rendered": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: http://127.0.0.1:8080\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/k8s-apiserver.pem\n    client-key: /etc/kubernetes/ssl/k8s-apiserver-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "template": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: ${server}\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/${client_cert}\n    client-key: /etc/kubernetes/ssl/${client_key}\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "vars.%": "3",
                            "vars.client_cert": "k8s-apiserver.pem",
                            "vars.client_key": "k8s-apiserver-key.pem",
                            "vars.server": "http://127.0.0.1:8080"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.network-policy": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "91c91fa1aaf5f1e271f42d8c156e80f3deac90436880a9e771c8e9a25814dae7",
                        "attributes": {
                            "id": "91c91fa1aaf5f1e271f42d8c156e80f3deac90436880a9e771c8e9a25814dae7",
                            "rendered": "{\n  \"kind\": \"ThirdPartyResource\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"network-policy.net.alpha.kubernetes.io\"\n  },\n  \"description\": \"Specification for a network isolation policy\",\n  \"versions\": [\n    {\n      \"name\": \"v1alpha1\"\n    }\n  ]\n}\n",
                            "template": "{\n  \"kind\": \"ThirdPartyResource\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"network-policy.net.alpha.kubernetes.io\"\n  },\n  \"description\": \"Specification for a network isolation policy\",\n  \"versions\": [\n    {\n      \"name\": \"v1alpha1\"\n    }\n  ]\n}\n"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                },
                "data.template_file.worker-kubeconfig": {
                    "type": "template_file",
                    "depends_on": [],
                    "primary": {
                        "id": "c42de1e4ad54a10563dfe69188702650ae93d7ecb444b2ff768b8b22cf794acf",
                        "attributes": {
                            "id": "c42de1e4ad54a10563dfe69188702650ae93d7ecb444b2ff768b8b22cf794acf",
                            "rendered": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: https://192.168.1.100\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/k8s-worker.pem\n    client-key: /etc/kubernetes/ssl/k8s-worker-key.pem\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "template": "kind: Config\nclusters:\n- name: local\n  cluster:\n    certificate-authority: /etc/kubernetes/ssl/ca.pem\n    server: ${server}\nusers:\n- name: kubelet\n  user:\n    client-certificate: /etc/kubernetes/ssl/${client_cert}\n    client-key: /etc/kubernetes/ssl/${client_key}\ncontexts:\n- context:\n    cluster: local\n    user: kubelet\n  name: kubelet-cluster.local\ncurrent-context: kubelet-cluster.local\n",
                            "vars.%": "3",
                            "vars.client_cert": "k8s-worker.pem",
                            "vars.client_key": "k8s-worker-key.pem",
                            "vars.server": "https://192.168.1.100"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": ""
                }
            },
            "depends_on": []
        }
    ]
}
