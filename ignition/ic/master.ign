{
  "ignition": {
    "version": "2.0.0",
    "config": {}
  },
  "storage": {
    "filesystems": [
      {
        "name": "var",
        "mount": {
          "device": "/dev/sda",
          "format": "ext4",
          "create": {
            "force": true
          }
        }
      }
    ],
    "files": [
      {
        "filesystem": "root",
        "path": "/etc/kubernetes/manifests/kube-apiserver.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20v1%0Akind%3A%20Pod%0Ametadata%3A%0A%20%20name%3A%20kube-apiserver%0A%20%20namespace%3A%20kube-system%0Aspec%3A%0A%20%20hostNetwork%3A%20true%0A%20%20containers%3A%0A%20%20-%20name%3A%20kube-apiserver%0A%20%20%20%20image%3A%20quay.io%2Fcoreos%2Fhyperkube%3Av1.6.2_coreos.0%0A%20%20%20%20command%3A%0A%20%20%20%20-%20%2Fhyperkube%0A%20%20%20%20-%20apiserver%0A%20%20%20%20-%20--bind-address%3D0.0.0.0%0A%20%20%20%20-%20--etcd-servers%3Dhttps%3A%2F%2F192.168.1.100%3A2379%0A%20%20%20%20-%20--etcd-cafile%3D%2Fetc%2Fkubernetes%2Fssl%2Fca.pem%0A%20%20%20%20-%20--etcd-certfile%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver.pem%0A%20%20%20%20-%20--etcd-keyfile%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver-key.pem%0A%20%20%20%20-%20--allow-privileged%3Dtrue%0A%20%20%20%20-%20--service-cluster-ip-range%3D10.3.0.0%2F24%0A%20%20%20%20-%20--secure-port%3D443%0A%20%20%20%20-%20--advertise-address%3D192.168.1.100%0A%20%20%20%20-%20--admission-control%3DNamespaceLifecycle%2CLimitRanger%2CServiceAccount%2CResourceQuota%0A%20%20%20%20-%20--tls-cert-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver.pem%0A%20%20%20%20-%20--tls-private-key-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver-key.pem%0A%20%20%20%20-%20--client-ca-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fca.pem%0A%20%20%20%20-%20--service-account-key-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver-key.pem%0A%20%20%20%20-%20--service-account-lookup%3Dtrue%0A%20%20%20%20-%20--runtime-config%3Dextensions%2Fv1beta1%3Dtrue%2Cextensions%2Fv1beta1%2Fdeployments%3Dtrue%2Cextensions%2Fv1beta1%2Fdaemonsets%3Dtrue%2Cextensions%2Fv1beta1%2Fnetworkpolicies%3Dtrue%2Cextensions%2Fv1beta1%2Fthirdpartyresources%3Dtrue%2Crbac.authorization.k8s.io%2Fv1beta1%3Dtrue%2Cbatch%2Fv2alpha1%3Dtrue%0A%20%20%20%20-%20--cloud-provider%3Daws%0A%20%20%20%20-%20--oidc-issuer-url%3Dhttps%3A%2F%2Faccounts.google.com%0A%20%20%20%20-%20--oidc-username-claim%3Demail%0A%20%20%20%20-%20--oidc-client-id%3D524243600836-hjur3brojhltt8cgdtqis07ui8pf597t.apps.googleusercontent.com%0A%20%20%20%20-%20--authorization-rbac-super-user%3Dk8s-admin%0A%20%20%20%20-%20--authorization-mode%3DRBAC%0A%20%20%20%20-%20--apiserver-count%3D1%0A%20%20%20%20-%20--audit-log-path%3D%2Fdev%2Fstdout%0A%20%20%20%20-%20--storage-backend%3Detcd3%0A%20%20%20%20-%20--storage-media-type%3Dapplication%2Fjson%0A%20%20%20%20-%20--v%3D0%0A%20%20%20%20livenessProbe%3A%0A%20%20%20%20%20%20httpGet%3A%0A%20%20%20%20%20%20%20%20host%3A%20127.0.0.1%0A%20%20%20%20%20%20%20%20port%3A%208080%0A%20%20%20%20%20%20%20%20path%3A%20%2Fhealthz%0A%20%20%20%20%20%20initialDelaySeconds%3A%2015%0A%20%20%20%20%20%20timeoutSeconds%3A%2015%0A%20%20%20%20ports%3A%0A%20%20%20%20-%20containerPort%3A%20443%0A%20%20%20%20%20%20hostPort%3A%20443%0A%20%20%20%20%20%20name%3A%20https%0A%20%20%20%20-%20containerPort%3A%208080%0A%20%20%20%20%20%20hostPort%3A%208080%0A%20%20%20%20%20%20name%3A%20local%0A%20%20%20%20volumeMounts%3A%0A%20%20%20%20-%20mountPath%3A%20%2Fetc%2Fkubernetes%2Fssl%0A%20%20%20%20%20%20name%3A%20ssl-certs-kubernetes%0A%20%20%20%20%20%20readOnly%3A%20true%0A%20%20%20%20-%20mountPath%3A%20%2Fetc%2Fssl%2Fcerts%0A%20%20%20%20%20%20name%3A%20ssl-certs-host%0A%20%20%20%20%20%20readOnly%3A%20true%0A%20%20volumes%3A%0A%20%20-%20hostPath%3A%0A%20%20%20%20%20%20path%3A%20%2Fetc%2Fkubernetes%2Fssl%0A%20%20%20%20name%3A%20ssl-certs-kubernetes%0A%20%20-%20hostPath%3A%0A%20%20%20%20%20%20path%3A%20%2Fusr%2Fshare%2Fca-certificates%0A%20%20%20%20name%3A%20ssl-certs-host%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/etc/kubernetes/manifests/kube-proxy.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20v1%0Akind%3A%20Pod%0Ametadata%3A%0A%20%20name%3A%20kube-proxy%0A%20%20namespace%3A%20kube-system%0Aspec%3A%0A%20%20hostNetwork%3A%20true%0A%20%20containers%3A%0A%20%20-%20name%3A%20kube-proxy%0A%20%20%20%20image%3A%20quay.io%2Fcoreos%2Fhyperkube%3Av1.6.2_coreos.0%0A%20%20%20%20command%3A%0A%20%20%20%20-%20%2Fhyperkube%0A%20%20%20%20-%20proxy%0A%20%20%20%20-%20--master%3Dhttp%3A%2F%2F127.0.0.1%3A8080%0A%20%20%20%20-%20--proxy-mode%3Diptables%0A%20%20%20%20-%20--v%3D0%0A%20%20%20%20securityContext%3A%0A%20%20%20%20%20%20privileged%3A%20true%0A%20%20%20%20volumeMounts%3A%0A%20%20%20%20-%20mountPath%3A%20%2Fetc%2Fssl%2Fcerts%0A%20%20%20%20%20%20name%3A%20ssl-certs-host%0A%20%20%20%20%20%20readOnly%3A%20true%0A%20%20volumes%3A%0A%20%20-%20hostPath%3A%0A%20%20%20%20%20%20path%3A%20%2Fusr%2Fshare%2Fca-certificates%0A%20%20%20%20name%3A%20ssl-certs-host%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/etc/kubernetes/manifests/kube-controller-manager.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20v1%0Akind%3A%20Pod%0Ametadata%3A%0A%20%20name%3A%20kube-controller-manager%0A%20%20namespace%3A%20kube-system%0Aspec%3A%0A%20%20containers%3A%0A%20%20-%20name%3A%20kube-controller-manager%0A%20%20%20%20image%3A%20quay.io%2Fcoreos%2Fhyperkube%3Av1.6.2_coreos.0%0A%20%20%20%20command%3A%0A%20%20%20%20-%20%2Fhyperkube%0A%20%20%20%20-%20controller-manager%0A%20%20%20%20-%20--master%3Dhttp%3A%2F%2F127.0.0.1%3A8080%0A%20%20%20%20-%20--leader-elect%3Dtrue%0A%20%20%20%20-%20--service-account-private-key-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver-key.pem%0A%20%20%20%20-%20--root-ca-file%3D%2Fetc%2Fkubernetes%2Fssl%2Fca.pem%0A%20%20%20%20-%20--cloud-provider%3Daws%0A%20%20%20%20-%20--configure-cloud-routes%3Dfalse%0A%20%20%20%20-%20--allocate-node-cidrs%3Dtrue%0A%20%20%20%20-%20--cluster-cidr%3D10.2.0.0%2F16%0A%20%20%20%20-%20--v%3D0%0A%20%20%20%20resources%3A%0A%20%20%20%20%20%20requests%3A%0A%20%20%20%20%20%20%20%20cpu%3A%20200m%0A%20%20%20%20livenessProbe%3A%0A%20%20%20%20%20%20httpGet%3A%0A%20%20%20%20%20%20%20%20host%3A%20127.0.0.1%0A%20%20%20%20%20%20%20%20path%3A%20%2Fhealthz%0A%20%20%20%20%20%20%20%20port%3A%2010252%0A%20%20%20%20%20%20initialDelaySeconds%3A%2015%0A%20%20%20%20%20%20timeoutSeconds%3A%2015%0A%20%20%20%20volumeMounts%3A%0A%20%20%20%20-%20mountPath%3A%20%2Fetc%2Fkubernetes%2Fssl%0A%20%20%20%20%20%20name%3A%20ssl-certs-kubernetes%0A%20%20%20%20%20%20readOnly%3A%20true%0A%20%20%20%20-%20mountPath%3A%20%2Fetc%2Fssl%2Fcerts%0A%20%20%20%20%20%20name%3A%20ssl-certs-host%0A%20%20%20%20%20%20readOnly%3A%20true%0A%20%20hostNetwork%3A%20true%0A%20%20volumes%3A%0A%20%20-%20hostPath%3A%0A%20%20%20%20%20%20path%3A%20%2Fetc%2Fkubernetes%2Fssl%0A%20%20%20%20name%3A%20ssl-certs-kubernetes%0A%20%20-%20hostPath%3A%0A%20%20%20%20%20%20path%3A%20%2Fusr%2Fshare%2Fca-certificates%0A%20%20%20%20name%3A%20ssl-certs-host%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/etc/kubernetes/manifests/kube-scheduler.yaml",
        "contents": {
          "source": "data:,apiVersion%3A%20v1%0Akind%3A%20Pod%0Ametadata%3A%0A%20%20name%3A%20kube-scheduler%0A%20%20namespace%3A%20kube-system%0Aspec%3A%0A%20%20hostNetwork%3A%20true%0A%20%20containers%3A%0A%20%20-%20name%3A%20kube-scheduler%0A%20%20%20%20image%3A%20quay.io%2Fcoreos%2Fhyperkube%3Av1.6.2_coreos.0%0A%20%20%20%20command%3A%0A%20%20%20%20-%20%2Fhyperkube%0A%20%20%20%20-%20scheduler%0A%20%20%20%20-%20--master%3Dhttp%3A%2F%2F127.0.0.1%3A8080%0A%20%20%20%20-%20--leader-elect%3Dtrue%0A%20%20%20%20-%20--v%3D0%0A%20%20%20%20resources%3A%0A%20%20%20%20%20%20requests%3A%0A%20%20%20%20%20%20%20%20cpu%3A%20100m%0A%20%20%20%20livenessProbe%3A%0A%20%20%20%20%20%20httpGet%3A%0A%20%20%20%20%20%20%20%20host%3A%20127.0.0.1%0A%20%20%20%20%20%20%20%20path%3A%20%2Fhealthz%0A%20%20%20%20%20%20%20%20port%3A%2010251%0A%20%20%20%20%20%20initialDelaySeconds%3A%2015%0A%20%20%20%20%20%20timeoutSeconds%3A%2015%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/opt/bin/install-kube-system",
        "contents": {
          "source": "data:,%23!%2Fbin%2Fbash%20-e%0A%2Fusr%2Fbin%2Fcurl%20-H%20%22Content-Type%3A%20application%2Fjson%22%20-XPOST%20-d%20%40%22%2Fsrv%2Fkubernetes%2Fmanifests%2Fkube-system.json%22%20%22http%3A%2F%2F127.0.0.1%3A8080%2Fapi%2Fv1%2Fnamespaces%22%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/srv/kubernetes/manifests/kube-system.json",
        "contents": {
          "source": "data:,%7B%0A%20%20%22apiVersion%22%3A%20%22v1%22%2C%0A%20%20%22kind%22%3A%20%22Namespace%22%2C%0A%20%20%22metadata%22%3A%20%7B%0A%20%20%20%20%22name%22%3A%20%22kube-system%22%0A%20%20%7D%0A%7D%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/srv/kubernetes/manifests/network-policy.json",
        "contents": {
          "source": "data:,%7B%0A%20%20%22kind%22%3A%20%22ThirdPartyResource%22%2C%0A%20%20%22apiVersion%22%3A%20%22extensions%2Fv1beta1%22%2C%0A%20%20%22metadata%22%3A%20%7B%0A%20%20%20%20%22name%22%3A%20%22network-policy.net.alpha.kubernetes.io%22%0A%20%20%7D%2C%0A%20%20%22description%22%3A%20%22Specification%20for%20a%20network%20isolation%20policy%22%2C%0A%20%20%22versions%22%3A%20%5B%0A%20%20%20%20%7B%0A%20%20%20%20%20%20%22name%22%3A%20%22v1alpha1%22%0A%20%20%20%20%7D%0A%20%20%5D%0A%7D%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/etc/kubernetes/kubeconfig",
        "contents": {
          "source": "data:,kind%3A%20Config%0Aclusters%3A%0A-%20name%3A%20local%0A%20%20cluster%3A%0A%20%20%20%20certificate-authority%3A%20%2Fetc%2Fkubernetes%2Fssl%2Fca.pem%0A%20%20%20%20server%3A%20http%3A%2F%2F127.0.0.1%3A8080%0Ausers%3A%0A-%20name%3A%20kubelet%0A%20%20user%3A%0A%20%20%20%20client-certificate%3A%20%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver.pem%0A%20%20%20%20client-key%3A%20%2Fetc%2Fkubernetes%2Fssl%2Fk8s-apiserver-key.pem%0Acontexts%3A%0A-%20context%3A%0A%20%20%20%20cluster%3A%20local%0A%20%20%20%20user%3A%20kubelet%0A%20%20name%3A%20kubelet-cluster.local%0Acurrent-context%3A%20kubelet-cluster.local%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      },
      {
        "filesystem": "root",
        "path": "/etc/prom-text-collectors/machine_role.prom",
        "contents": {
          "source": "data:,machine_role%7Brole%3D%22master%22%7D%201%0A",
          "verification": {}
        },
        "mode": 644,
        "user": {},
        "group": {}
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "name": "etcd-member.service",
        "enable": true,
        "dropins": [
          {
            "name": "20-clct-etcd-member.conf",
            "contents": "[Service]\nEnvironment=\"ETCD_IMAGE_TAG=v3.1.6\"\nExecStart=\nExecStart=/usr/lib/coreos/etcd-wrapper $ETCD_OPTS \\\n  --name=\"member0\" \\\n  --listen-peer-urls=\"https://192.168.1.100:2380\" \\\n  --listen-client-urls=\"https://0.0.0.0:2379\" \\\n  --initial-advertise-peer-urls=\"https://192.168.1.100:2380\" \\\n  --initial-cluster=\"member0=https://192.168.1.100:2380\" \\\n  --advertise-client-urls=\"https://192.168.1.100:2379\" \\\n  --cert-file=\"/etc/etcd/ssl/k8s-etcd.pem\" \\\n  --key-file=\"/etc/etcd/ssl/k8s-etcd-key.pem\" \\\n  --client-cert-auth=true \\\n  --trusted-ca-file=\"/etc/etcd/ssl/ca.pem\" \\\n  --peer-cert-file=\"/etc/etcd/ssl/k8s-etcd.pem\" \\\n  --peer-key-file=\"/etc/etcd/ssl/k8s-etcd-key.pem\" \\\n  --peer-client-cert-auth=true \\\n  --peer-trusted-ca-file=\"/etc/etcd/ssl/ca.pem\""
          }
        ]
      },
      {
        "name": "flanneld.service",
        "enable": true,
        "dropins": [
          {
            "name": "20-clct-flannel.conf",
            "contents": "[Service]\nEnvironment=\"FLANNEL_IMAGE_TAG=v0.7.1\"\nExecStart=\nExecStart=/usr/lib/coreos/flannel-wrapper $FLANNEL_OPTS \\\n  --etcd-endpoints=\"https://192.168.1.100:2379\" \\\n  --etcd-cafile=\"/etc/kubernetes/ssl/ca.pem\" \\\n  --etcd-certfile=\"/etc/kubernetes/ssl/k8s-apiserver.pem\" \\\n  --etcd-keyfile=\"/etc/kubernetes/ssl/k8s-apiserver-key.pem\" \\\n  --iface=\"192.168.1.100\""
          }
        ]
      },
      {
        "name": "var.mount",
        "enable": true,
        "contents": "[Unit]\nDescription=Mount ephemeral to /var\n[Mount]\nWhat=/dev/sda\nWhere=/var\nType=ext4\n[Install]\nWantedBy=multi-user.target\n"
      },
      {
        "name": "docker.service",
        "dropins": [
          {
            "name": "10-wait-docker.conf",
            "contents": "[Unit]\nAfter=var.mount\nRequires=var.mount\n"
          }
        ]
      },
      {
        "name": "etcd-member.service",
        "enable": true,
        "dropins": [
          {
            "name": "10-wait-etcd.conf",
            "contents": "[Unit]\nAfter=var.mount get-ssl.service\nRequires=var.mount get-ssl.service\n"
          },
          {
            "name": "15-custom-options.conf",
            "contents": "[Service]\nExecStartPre=/usr/bin/mkdir -p /etc/etcd\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/lib/coreos/etcd-member-wrapper.uuid \\\n  --volume etc-etcd,kind=host,source=/etc/etcd,readOnly=true \\\n  --mount volume=etc-etcd,target=/etc/etcd\"\n"
          }
        ]
      },
      {
        "name": "docker.service",
        "enable": true,
        "dropins": [
          {
            "name": "40-flannel.conf",
            "contents": "[Unit]\nRequires=flanneld.service\nAfter=flanneld.service\n"
          }
        ]
      },
      {
        "name": "flanneld.service",
        "enable": true,
        "dropins": [
          {
            "name": "10-etcd.conf",
            "contents": "[Unit]\nRequires=get-ssl.service\nAfter=get-ssl.service\n[Service]\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/lib/coreos/flannel-wrapper.uuid \\\n  --volume etc-kubernetes-ssl,kind=host,source=/etc/kubernetes/ssl,readOnly=true \\\n  --mount volume=etc-kubernetes-ssl,target=/etc/kubernetes/ssl\"\nExecStartPre=/usr/bin/curl \\\n    --silent -X PUT \\\n    --cacert /etc/kubernetes/ssl/ca.pem \\\n    --cert /etc/kubernetes/ssl/k8s-apiserver.pem \\\n    --key /etc/kubernetes/ssl/k8s-apiserver-key.pem \\\n    -d \"value={\\\"Network\\\" : \\\"10.2.0.0/16\\\", \\\"Backend\\\" : {\\\"Type\\\" : \\\"vxlan\\\"}}\" \\\n    https://192.168.1.100:2379/v2/keys/coreos.com/network/config?prevExist=false\n"
          }
        ]
      },
      {
        "name": "kubelet.service",
        "enable": true,
        "contents": "[Unit]\nRequires=docker.service\nAfter=docker.service\n[Service]\nEnvironment=KUBELET_IMAGE_URL=quay.io/coreos/hyperkube\nEnvironment=KUBELET_IMAGE_TAG=v1.6.2_coreos.0\nEnvironment=\"RKT_RUN_ARGS=\\\n  --uuid-file-save=/var/run/kubelet-pod.uuid \\\n  --volume var-log,kind=host,source=/var/log \\\n  --mount volume=var-log,target=/var/log \\\n  --volume cni-bin,kind=host,source=/opt/cni/bin \\\n  --mount volume=cni-bin,target=/opt/cni/bin \\\n  --volume var-lib-cni,kind=host,source=/var/lib/cni \\\n  --mount volume=var-lib-cni,target=/var/lib/cni \\\n  --volume dns,kind=host,source=/etc/resolv.conf \\\n  --mount volume=dns,target=/etc/resolv.conf\"\nExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests\nExecStartPre=/usr/bin/mkdir -p /var/log/containers\nExecStartPre=/usr/bin/mkdir -p /opt/cni/bin\nExecStartPre=/usr/bin/mkdir -p /var/lib/cni\nExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid\nExecStart=/usr/lib/coreos/kubelet-wrapper \\\n  --require-kubeconfig=true \\\n  --kubeconfig=/etc/kubernetes/kubeconfig \\\n  --node-labels=role=master \\\n  --register-node=true \\\n  --register-schedulable=false \\\n  --container-runtime=docker \\\n  --network-plugin-dir=/etc/kubernetes/cni/net.d \\\n  --network-plugin=cni \\\n  --cni-bin-dir=/opt/cni/bin \\\n  --cni-conf-dir=/etc/kubernetes/cni/net.d \\\n  --allow-privileged=true \\\n  --pod-manifest-path=/etc/kubernetes/manifests \\\n  --cluster-dns=10.3.0.10 \\\n  --cluster-domain=cluster.local\nExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid\nRestart=always\nRestartSec=10\n[Install]\nWantedBy=multi-user.target\n"
      },
      {
        "name": "install-kube-system.service",
        "enable": true,
        "contents": "[Unit]\nRequires=kubelet.service docker.service\nAfter=kubelet.service docker.service\n\n[Service]\nType=simple\nStartLimitInterval=0\nRestart=on-failure\nRestartSec=10\nExecStartPre=/usr/bin/curl http://127.0.0.1:8080/version\nExecStart=/opt/bin/install-kube-system\n"
      },
      {
        "name": "get-ssl.service",
        "enable": true,
        "contents": "[Unit]\nDescription=Get ssl artifacts from s3 bucket using IAM role\nAfter=network.target\n[Service]\nExecStartPre=-/usr/bin/mkdir -p /etc/etcd/ssl\nExecStartPre=-/usr/bin/mkdir -p /etc/kubernetes/ssl\nExecStartPre=/bin/sh -c \"until curl -sL http://192.168.1.1:8000; do sleep 2; done\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-etcd.tar | tar xv -C /etc/etcd/ssl/\"\nExecStart=/bin/sh -c \"curl -sL http://192.168.1.1:8000/certs/k8s-apiserver.tar | tar xv -C /etc/kubernetes/ssl/\"\nRemainAfterExit=yes\nType=oneshot\n"
      }
    ]
  },
  "networkd": {},
  "passwd": {}
}
